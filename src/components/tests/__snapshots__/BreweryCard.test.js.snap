// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BreweryCard component should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BreweryCard
    brewery={Object {}}
    getBrewery={[Function]}
    user={Object {}}
    writeUserData={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/brewery/undefined"
>
          <h2
                    onClick={[Function]}
          />
</Link>,
        <h3 />,
        <h4
          onClick={[Function]}
>
          FAVORITE
</h4>,
      ],
      "className": "beer-card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <h2
            onClick={[Function]}
/>,
          "replace": false,
          "to": "/brewery/undefined",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "h2",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "",
        },
        "ref": null,
        "rendered": "",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "FAVORITE",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "FAVORITE",
        "type": "h4",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/brewery/undefined"
>
            <h2
                        onClick={[Function]}
            />
</Link>,
          <h3 />,
          <h4
            onClick={[Function]}
>
            FAVORITE
</h4>,
        ],
        "className": "beer-card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <h2
              onClick={[Function]}
/>,
            "replace": false,
            "to": "/brewery/undefined",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "h2",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "",
          },
          "ref": null,
          "rendered": "",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "FAVORITE",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "FAVORITE",
          "type": "h4",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
